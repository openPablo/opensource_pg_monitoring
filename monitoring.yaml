# Generation of Kubernetes YAML is still under development!
#
# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-1.4.2-stable2
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2019-11-21T10:01:08Z"
  labels:
    app: monitoring
  name: monitoring
spec:
  containers:
  - command:
    - /run.sh
    env:
    - name: PATH
      value: /usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
    - name: container
      value: podman
    - name: GF_PATHS_DATA
      value: /var/lib/grafana
    - name: GF_PATHS_HOME
      value: /usr/share/grafana
    - name: GF_PATHS_LOGS
      value: /var/log/grafana
    - name: GF_PATHS_PLUGINS
      value: /var/lib/grafana/plugins
    - name: GF_SERVER_ROOT_URL
      value: http://localhost/grafana
    - name: GF_INSTALL_PLUGINS
      value: camptocamp-prometheus-alertmanager-datasource,grafana-piechart-panel
    - name: GF_PATHS_CONFIG
      value: /etc/grafana/grafana.ini
    - name: GF_PATHS_PROVISIONING
      value: /etc/grafana/provisioning
    image: docker.io/grafana/grafana:latest
    name: grafana
    ports:
    - containerPort: 3000
      hostPort: 3000
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      runAsUser: 472
    workingDir: /usr/share/grafana
  - command:
    - "--config.file=/etc/alertmanager/alertmanager.yml"
    - "--storage.path=/alertmanager"
    - "--web.external-url=https://localhost:/alerts"
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
    - name: container
      value: podman
    image: docker.io/prom/alertmanager:latest
    name: alertmanager
    ports:
    - containerPort: 9093
      hostPort: 9093
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      runAsUser: 65534
    workingDir: /alertmanager
  - command:
    - "--config.file=/etc/prometheus/prometheus.yml"
    - "--storage.tsdb.path=/prometheus"
    - "--web.console.libraries=/usr/share/prometheus/console_libraries"
    - "--web.console.templates=/usr/share/prometheus/consoles"
    - "--web.external-url=https://localhost:/promconsole"
    env:
    - name: PATH
      value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    - name: TERM
      value: xterm
    - name: HOSTNAME
    - name: container
      value: podman
    image: docker.io/prom/prometheus:latest
    name: prometheus
    ports:
    - containerPort: 9090
      hostPort: 9090
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities: {}
      privileged: false
      readOnlyRootFilesystem: false
      runAsUser: 65534
    workingDir: /prometheus
status: {}
